# vim: set fenc=utf-8 ft=dosini:

; <F3>
[file-build]

# check ":AsyncTaskMacro" to see available macros
command:c=gcc -O2 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/build/$(VIM_FILENOEXT)"
command:cpp=g++ -O2 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/build/$(VIM_FILENOEXT)"

cwd=$(VIM_FILEDIR)
output=quickfix
save=2

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

; <F4>
[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_FILEDIR)/build/$(VIM_PATHNOEXT)"
command:python=python -u "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:lua=luajit "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:dockerfile=docker build .
command:go="$(VIM_PATHNOEXT)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"

cwd=$(VIM_FILEDIR)
output=terminal
save=2

[project-build]
cwd=$(VIM_ROOT)
output=quickfix
errorformat=%f:%l:%m
save=2

[project-run]
command:python=python -u main.py

cwd=$(VIM_ROOT)
output=terminal
save=2
